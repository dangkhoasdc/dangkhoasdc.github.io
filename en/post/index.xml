<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Dang-Khoa&#39;s blog</title>
    <link>http://dangkhoasdc.github.io/en/post/</link>
    <description>Recent content in Posts on Dang-Khoa&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>vi</language>
    <lastBuildDate>Tue, 11 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://dangkhoasdc.github.io/en/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sampling techniques for Partially Annotated Detection</title>
      <link>http://dangkhoasdc.github.io/en/post/2019/06/11/sampling-techniques-for-partially-annotated-detection/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/en/post/2019/06/11/sampling-techniques-for-partially-annotated-detection/</guid>
      <description>In this post, I will discuss two papers that try to handle the partially annotated datasets. Let talk a bit about why we care about missing annotations in detection. Firstly, labeling box is difficult and tedious. Increasing the size of taxonomy also exponentially increase the difficulty of the task. Secondly, Suppose that originally we have a training dataset with 20 categories, later, we want to add 10 more new categories into the model.</description>
    </item>
    
    <item>
      <title>[WIP] Libra R-CNN: Paper review and comments</title>
      <link>http://dangkhoasdc.github.io/en/post/2019/06/03/wip-libra-r-cnn-paper-review-and-comments/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/en/post/2019/06/03/wip-libra-r-cnn-paper-review-and-comments/</guid>
      <description>Regarding the object detection problem, it seems like the community pays less attention to training pipeline than other tasks such as network design, inference improvement. This paper investigates the current problem of the CNN detection models. They consider the imbalance phenomenon, which is composed of 3 levels:
 Sample level. Feature level. Objective level.  They basically are 3 corresponding major components of a detection model: feature extraction, region proposals, and predictors.</description>
    </item>
    
    <item>
      <title>Groupnorm: Paper, review and implementations</title>
      <link>http://dangkhoasdc.github.io/en/post/2019/05/28/groupnorm-paper-review-and-implementations/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/en/post/2019/05/28/groupnorm-paper-review-and-implementations/</guid>
      <description>After several tries, I have found out that GroupNorm works suprisingly well on detection models. Just turn on the GroupNorm of FPN and I can get an improvement with a large margin. Going further, I want to replace Batchnorm of the backbone with GroupNorm and see how I can utilize this layer in other networks.
Paper: overview and comments Criticism about BatchNorm It does not work well on models trained with small batches.</description>
    </item>
    
    <item>
      <title>Install OpenCV 3 non-free module on Ubuntu</title>
      <link>http://dangkhoasdc.github.io/en/post/2018/06/15/install-opencv-3-non-free-module-on-ubuntu/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/en/post/2018/06/15/install-opencv-3-non-free-module-on-ubuntu/</guid>
      <description>The opencv_nonfree module provides very useful features such as two prominent image features SIFT and SURF (including the CUDAâ€™s implementation). In this tutorial, I demonstrate how to install this module into OpenCV 3 on Ubuntu.
Prerequisites  Remove the old version which has been installed in the system. Do not install opencv via apt-get Install cmake : sudo apt-get install cmake  Installation   Download opencv git clone https://github.com/opencv/opencv</description>
    </item>
    
    <item>
      <title>OpenCV on Android: practices and tips</title>
      <link>http://dangkhoasdc.github.io/en/post/2018/03/08/opencv-on-android-practices-and-tips/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/en/post/2018/03/08/opencv-on-android-practices-and-tips/</guid>
      <description>Transfer MAT objects from Android to NDK The main idea is to use the address of an MAT object in order to manipulate the data.
Basically, we have a function playing as a bridge between Java APIs and NDK:
public native void function_name(long matAddress); To call the function, we use Mat&amp;rsquo;s address by calling getNativeObjAddr(). All computations in NDK will affect the content of MAT in both Java and NDK layers.</description>
    </item>
    
    <item>
      <title>Setup OpenCV and Android Studio with NDK support</title>
      <link>http://dangkhoasdc.github.io/en/post/2018/02/25/setup-opencv-and-android-studio-with-ndk-support/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/en/post/2018/02/25/setup-opencv-and-android-studio-with-ndk-support/</guid>
      <description>In this tutorial, I will demonstrate how to configurate the renowned computer vision libary, OpenCV, with the current Android Studio version (3.0.1). Let get started. The compiled version of OpenCV which supports Android is available at OpenCV Homepage. Download and extract it. Please note that to test the application properly on the mobile devices, the OpenCV Manager has to be installed.
In another tutorial, I will talk about how to compile our own OpenCV library and put it to Android Studio since the pre-compiled library misses some interesting and important components, e.</description>
    </item>
    
    <item>
      <title>Programming Pearls</title>
      <link>http://dangkhoasdc.github.io/en/post/2018/02/07/programming-pearls/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/en/post/2018/02/07/programming-pearls/</guid>
      <description>Programing Pearls - Jon Bentley
Excellent.
Until now, there is no such book which makes me shout out like this after receiving from Amazon. Let brieftly review some favoriate books:
  CLRS: theoretically, this really is an &amp;ldquo;introduction&amp;rdquo; textbook about algorithms. Nonetheless, it still is an extensive reference and full of details. However, I am not impressed by the writing style and the pseudo-code.
  Algorithms, Sedgewick: one of the best textbooks ever.</description>
    </item>
    
    <item>
      <title>Selected Papers on Computer Science (Don Knuth) and the current state of Deep Learning</title>
      <link>http://dangkhoasdc.github.io/en/post/2018/01/15/selected-papers-on-computer-science-don-knuth-and-the-current-state-of-deep-learning/</link>
      <pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/en/post/2018/01/15/selected-papers-on-computer-science-don-knuth-and-the-current-state-of-deep-learning/</guid>
      <description>Book Info:
    Description     Title Selected Papers on Computer Science [Amazon]   Author Donald Knuth   Pages 276    This is the most accessible book from Don Knuth. Although I was published nearly 20 years ago, it still is a classic computer science book. In Amazon, there is an interesting comment about the book from Peter Norvig (Director of Google Research).</description>
    </item>
    
    <item>
      <title>The repertoire method</title>
      <link>http://dangkhoasdc.github.io/en/post/2017/12/26/the-repertoire-method/</link>
      <pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/en/post/2017/12/26/the-repertoire-method/</guid>
      <description>The repertoire method is an method of finding closed-form of recurrence relations and sum of a series. The method is introduced in Chapter 1 of ConMath but most readers at the first time seem to struggle with it. Through the book, especially Chapter 1 and 2, the repertoire method demonstrates its ability to solve many sums and recurrences. However, I honestly admit that it is quite difficult to apply and fully understand how it works.</description>
    </item>
    
    <item>
      <title>Why Ubuntu on Windows?</title>
      <link>http://dangkhoasdc.github.io/en/post/2017/09/26/why-ubuntu-on-windows/</link>
      <pubDate>Tue, 26 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/en/post/2017/09/26/why-ubuntu-on-windows/</guid>
      <description>For programming purposes, I prefer Linux to Windows. However, Windows is really good at entertaining and office works. Beside, Microsoft Office is the best office suit I ever have experienced, and OneNote is one of my favorite note-taking software. Not to mention my beloved Bilizzard games such as Diablo, Starcraft and other video games.
A solution to integrate Windows and Linux in one machine is to install dual-boot. However, I am tired of switching between 2 OSs.</description>
    </item>
    
    <item>
      <title>Install the OpenCV library on Visual Studio</title>
      <link>http://dangkhoasdc.github.io/en/post/2016/10/23/install-the-opencv-library-on-visual-studio/</link>
      <pubDate>Sun, 23 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/en/post/2016/10/23/install-the-opencv-library-on-visual-studio/</guid>
      <description>Compiling the libray There are many benefits of compiling the library from source instead of using the pre-compiled version:
 Supporting the latest IDE (Vision Studio). For example, pre-compiled OpenCV 3.0 (22/11/2015) is not compatible with Visual Studio 2015. Be able to customize the library, we can add several options to OpenCV, for example, we can add APIs for Kinect SDK, OpenCL, Python, etc.  Down the source code for the Windows environment here.</description>
    </item>
    
  </channel>
</rss>