<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithms on Dang-Khoa&#39;s blog </title>
    <link>http://dangkhoasdc.github.io/tags/algorithms/</link>
    <description>Recent content in Algorithms on Dang-Khoa&#39;s blog </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Dang-Khoa</copyright>
    <lastBuildDate>Wed, 07 Feb 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://dangkhoasdc.github.io/tags/algorithms/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Programming Pearls</title>
      <link>http://dangkhoasdc.github.io/post/programming_pearls/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/post/programming_pearls/</guid>
      <description>Programing Pearls - Jon Bentley
Excellent.
Until now, there is no such book which makes me shout out like this after receiving from Amazon. Let brieftly review some favoriate books:
 CLRS: theoretically, this really is an &amp;ldquo;introduction&amp;rdquo; textbook about algorithms. Nonetheless, it still is an extensive reference and full of details. However, I am not impressed by the writing style and the pseudo-code.
 Algorithms, Sedgewick: one of the best textbooks ever.</description>
    </item>
    
    <item>
      <title>Generate the inversion table from an integer sequence</title>
      <link>http://dangkhoasdc.github.io/post/gen_inversion_table/</link>
      <pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/post/gen_inversion_table/</guid>
      <description>The programming exercise is from TAoCP, Vol3, 5.1.1-6:
 Design an algorithm that computes the inversion table $b_1, b_2 \cdots b_n$ corresponding to a given permutation $a_1a_2 \cdots a_n$ of ${1, 2, \cdots , n}$, where the running time is essentially proportional to $n\ log n$ on typical computers.
 I was really stuck on the solution Knuth given in the book. The author also mentioned another approach which actually is a modifination of merge sort.</description>
    </item>
    
    <item>
      <title>An adventure in The Art of Computer Programming</title>
      <link>http://dangkhoasdc.github.io/project/taocp/</link>
      <pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://dangkhoasdc.github.io/project/taocp/</guid>
      <description>List of related notes: Some notes will be written in English.Stay tuned.</description>
    </item>
    
  </channel>
</rss>